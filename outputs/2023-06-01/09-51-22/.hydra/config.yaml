parameters:
  targetColName: percentage
  epochs: 6
  dataLoaderArgs:
    batch_size: 1
    num_workers: 4
    drop_last: true
  normalize: true
  scheduler: plateau
  makeTest: true
  hydra: default
  override hydra/hydra_logging: colorlog
  override hydra/job_logging: colorlog
  modelMode: train
  model:
    _target_: model_set.models.UNetFlood
    classes: 1
    in_channels: 1
    dropout: true
    prob: 0.1
  init_weight:
    _partial_: true
    _target_: torch.nn.init.kaiming_normal_
  initWeightParams:
    mode:'fan_out': null
    nonlinearity :'relu': null
  loss_fn:
    _partial_: true
    _target_: torch.nn.functional.binary_cross_entropy_with_logits
  metric_fn:
    _partial_: true
    _target_: scr.losses.iou_binary
  optimizer:
    _target_: torch.optim.Adam
    maximize: false
    lr: 1.0e-06
    weight_decay: 0.9
work_dir: ${hydra:runtime.cwd}
config_name: ${hydra:job.config_name}
config_override_dirname: ${hydra:job.override_dirname}
config_path: ${hydra:runtime.config_sources}
projectRoot: /home/abfernan/CrossCanFloodMap/DL4Flood/
dataRoot: /home/abfernan/CrossCanFloodMap/DatasetCNNFlood/C1Dataset
rawDataList: ${dataRoot}/Percentage_1/Percentage_1_feat1_min-annot1_trn.csv
trainingDataList: ${dataRoot}/Percentage_1_IntensiveSampl/SplitedTrainingSet_C1IntensiveSampl.csv
validationDataList: ${dataRoot}/Percentage_1_IntensiveSampl/SplitedValSet_C1IntensivSampl.csv
testingDataList: ${dataRoot}/Percentage_1_tst/Percentage_1_tst_feat1_min-annot1_tst.csv
permanentTransformetionSavePath: ${dataRoot}/Percentage_1/trn/
standardizerSavePath: ${dataRoot}/standardizers.csv
