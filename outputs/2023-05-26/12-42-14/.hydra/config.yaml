parameters:
  targetColName: percentage
  epochs: 150
  dataLoaderArgs:
    batch_size: 1
    num_workers: 4
    drop_last: true
  normalize: true
  scheduler: plateau
  makeTest: true
  hydra: default
  override hydra/hydra_logging: colorlog
  override hydra/job_logging: colorlog
  modelMode: train
  model:
    _target_: model_set.models.UNetFlood
    classes: 1
    in_channels: 1
    dropout: true
    prob: 0.1
  init_weigth:
    _partial_: true
    _target_: torch.nn.init.kaiming_normal_
  initWeighParams:
    mode:'fan_out': null
    nonlinearity :'relu': null
  loss_fn:
    _partial_: true
    _target_: scr.losses.lovasz_hinge
  metric_fn:
    _partial_: true
    _target_: scr.losses.iou_binary
  optimizer:
    _target_: torch.optim.Adam
    maximize: true
    lr: 5.0e-07
    weight_decay: 0.9
work_dir: ${hydra:runtime.cwd}
config_name: ${hydra:job.config_name}
config_override_dirname: ${hydra:job.override_dirname}
config_path: ${hydra:runtime.config_sources}
projectRoot: C:\Users\abfernan\CrossCanFloodMapping\DL4Flood
saveModelsPath: ${hydra:runtime.cwd}
dataRoot: C:\Users\abfernan\CrossCanFloodMapping\DatasetCNNFlood\C1Dataset\Percentage_1
rawDataList: C:\Users\abfernan\CrossCanFloodMapping\DatasetCNNFlood\C1Dataset\Percentage_1\TrainingDataSource_Percentage_1_feat1_min-annot1_trn.csv
trainingDataList: ${dataRoot}\SplitedTrainingSetPlusRotated.csv
validationDataList: ${dataRoot}\SplitedValSet.csv
testingDataList: ${dataRoot}\Percentage_1_testSet\Percentage_1_testSet_feat1_min-annot1_trn.csv
permanentTransformetionSavePath: ${dataRoot}\trn
standardizerSavePath: ${dataRoot}\standardizers.csv
